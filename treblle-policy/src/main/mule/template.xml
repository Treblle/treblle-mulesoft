<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
                        http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd
                        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <http-policy:proxy name="{{{policyId}}}-treblle-policy">
        <http-policy:source>

            <!-- Store the incoming request payload to restore it after the API call -->
            <set-variable variableName="startTime" value="#[now()]" />
            <set-variable variableName="startTimeInMillis"
                value="#[dw::util::Timer::currentMilliseconds()]" />
            <set-variable variableName="reqPayload" value="#[payload]" />
            <set-variable variableName="reqHeaders" value="#[attributes.headers]" />
            <set-variable variableName="reqURL" value="#[attributes.requestPath]" />
            <set-variable variableName="remoteAdd" value="#[attributes.remoteAddress]" />
            <set-variable variableName="scheme" value="#[attributes.scheme]" />
            <set-variable variableName="method" value="#[attributes.method]" />
            <set-variable variableName="userAgent" value="#[attributes.headers['user-agent']]" />
            <set-variable variableName="reqTime"
                value="#[vars.startTime as String {format: 'yyyy-MM-dd HH:mm:ss'}]" />

            <!-- Proceed with the original request processing -->
            <http-policy:execute-next />

            <set-variable variableName="endTime" value="#[dw::util::Timer::currentMilliseconds()]" />
            <set-variable variableName="resPayload" value="#[payload]" />
            <set-variable variableName="resHeaders" value="#[attributes.headers]" />
            <set-variable variableName="timeZone" value="#[server.timeZone]" />
            <set-variable variableName="osName" value="#[server.osName]" />
            <set-variable variableName="osArch" value="#[server.osArch]" />
            <set-variable variableName="osVersion" value="#[server.osVersion]" />
            <set-variable variableName="encoding" value="#[app.encoding]" />
            <set-variable variableName="statusCode" value="#[attributes.statusCode]" />
            <set-variable variableName="elapsedTime"
                value="#[(vars.endTime - vars.startTimeInMillis)*1000]" />

            <choice>
                <when expression="#[attributes.headers['Content-Length'] != null]">

                    <set-variable variableName="payloadSize"
                        value="#[attributes.headers['Content-Length']]" />
                </when>
                <when expression="#[vars.resPayload is Object]">

                    <set-variable variableName="payloadSize"
                        value="#[sizeOf(write(vars.resPayload, 'application/json') as Binary)]" />
                </when>
                <otherwise>

                    <set-variable variableName="payloadSize"
                        value="#[sizeOf(vars.resPayload as Binary)]" />
                </otherwise>
            </choice>

            <logger level="INFO" message="This is it..... Start" />
            <logger level="INFO" message="#[vars.resPayload]" />


            <async>

                <set-payload
                    value="#[output application/json ---
                        {
                            'project_id': '{{{projectID}}}',
                            'api_key': '{{{apiKey}}}',
                            'version' : 0.6,
                            'sdk': 'MuleSoft',
                            'data': {
                                    'server': {
                                        'timezone': vars.timeZone,
                                        'os': {
                                            'name': vars.osName,
                                            'release': vars.osVersion,
                                            'architecture': vars.osArch
                                        },
                                        'software': 'MuleSoft',
                                        'signature': '',
                                        'protocol': vars.scheme,
                                        'encoding': vars.encoding
                                    },
                                    'request': {
                                        'timestamp': vars.reqTime,
                                        'ip': vars.remoteAdd,
                                        'url': 'https://cloudhub.io' ++ vars.reqURL,
                                        'user_agent': vars.userAgent,
                                        'method': vars.method,
                                        'headers': vars.reqHeaders,
                                        'body': vars.reqPayload,
                                    },
                                    response: {
                                        'headers': vars.resHeaders,
                                        'code': vars.statusCode,
                                        'size': vars.payloadSize,
                                        'load_time': vars.elapsedTime,
                                        'body': vars.resPayload
                                    },
                                    'errors': []
                                }
                        }]"
                />


                <http:request method="POST" url="http://rocknrolla.treblle.com"
                    config-ref="HTTP_Request_configuration">
                    <http:headers>
                        #[attributes.headers ++ {
                        'Content-Type': 'application/json',
                        'x-api-key': '{{{apiKey}}}',
                        'User-Agent': 'MuleSoft-plugin-treblle'
                        }]
                    </http:headers>
                </http:request>

            </async>

        </http-policy:source>
    </http-policy:proxy>

    <http:request-config name="HTTP_Request_configuration">
        <http:request-connection host="rocknrolla.treblle.com" port="443">

        </http:request-connection>
    </http:request-config>

</mule>